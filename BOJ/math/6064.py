# M과 N보다 작거나 같은 두 개의 자연수 x, y를 가지고 각 년도를 <x:y>와 같은 형식으로 표현
#  첫 번째 해를 <1:1>로 표현하고, 두 번째 해를 <2:2>로 표현하였다. <x:y>의 다음 해를 표현한 것을 <x':y'>
# if x < M: x' = x + 1
# else: x' = 1
# if y < N: y' = y + 1
# else: y' = 1
#  <M:N>은 그들 달력의 마지막 해로서, 이 해에 세상의 종말이 도래한다는 예언
# M = 10 이고 N = 12라고 하자. 첫 번째 해는 <1:1>
# 11번째 해는 <1:11>
# <3:1>은 13번째 해
# <10:12>는 마지막인 60번째 해를
# 즉, <x:y>가 유효하지 않은 표현이면, -1
import sys
input = sys.stdin.readline

def gcd(a,b):
    if(a == 0): return b
    return gcd(b%a, a)

def lcm(a,b):
    return a//gcd(a,b) * b

T = int(input())
for _ in range(T):
    M, N, x, y = map(int, input().split())
    while (x <= lcm(M,N)):
        if x % N == y % N:
            print(x)
            break
        x += M
    else:
        print(-1)


# 10 12 3 9 -> 10으로 나눴을 떄 3이고 12로 나눴을 떄 9인 수
# <M;N>이 되는 해는 LCM(M, N)번째, M으로도 나눠져야, N으로도 나눠져
# 유효하지 않은 <x:y>가 있을 수 있다
# 10 12 7 2 -> N=10이고 M= 12일 떄 <7:2>로 표현되는 해가 없어서 -1
# 10으로 나눈 나머지가 7이라는 것은 홀수, 정작 동시에 12로 나눈 나머지가 2이려면 짝수여야 하니 이런 해는 없

# 1번째 해부터 LCM(M,N)번째 해까지에 대해서 N으로 나눈 나머지가 x이고 M으로 나눈 나머지가 y인지 확인하는 방법
# x가 0에서 N-1까지가 아니라 1에서 N
# M과 N이 최대 40000이어서 LCM(N, M)은 최대 40000^2이고 정수의 쵀대 범위 21억...보다 작아서 lcm타입을 int로 !
# O(LCM(N, M))은 최대 NM이니 O(NM), N,M이 최대 40000이니 이건 시간초과, 160000_0000 -> 시간초
# 1부터 LCM(N, M)가지를 다 보는 대신에 M으로 나눈 나머지 x인 목록만을 변수 i에 넣고 for문을 돌리면 LCM(M,N) / M개 수만 확인하면 됨
# 최대  N의 시간